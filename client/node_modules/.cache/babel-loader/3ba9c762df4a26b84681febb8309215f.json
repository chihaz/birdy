{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Chihez\\\\Desktop\\\\birdy\\\\client\\\\src\\\\components\\\\post\\\\Post.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./post.css\";\nimport { MoreVert } from \"@material-ui/icons\";\nimport { useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { format } from \"timeago.js\";\nimport { Link } from \"react-router-dom\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport { ThumbUp } from \"@material-ui/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Post(_ref) {\n  _s();\n\n  let {\n    post\n  } = _ref;\n  const [like, setLike] = useState(post.likes.length); //le nombre de like reprensent la longeur de l'array contenant tout les utilisateur ayant aimer le post\n\n  const [isLiked, setIsLiked] = useState(false);\n  const [user, setUser] = useState({}); //nous utilisant l'element user afin de recuperer les information de l'utilisateur aya publier un post et les afficher dans celui ci\n\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER; //permet d'acceder au dossier a partir de n'import quelle position dans le site web\n  //Et cela grace au fichier .env declarant le chemin pour atteindre les photo \n\n  const {\n    user: currentUser\n  } = useContext(AuthContext);\n  /* on recupere une array contenant le liste des utilisateurs ayant liker le post */\n\n  useEffect(() => {\n    /* on verifie si l'user courant a aimer ce post ou pas */\n    setIsLiked(post.likes.includes(currentUser._id));\n  }, [currentUser._id, post.likes]); //RECUPERE LES UTILISATEURS\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      //en utilisant la list de post passe en parametre contenant les userId en recupere les differents nom d'utilisateur ayant publier les post\n      const res = await axios.get(`/users?userId=${post.userId}`);\n      setUser(res.data);\n    };\n\n    fetchUser();\n  }, [post.userId]);\n\n  const likeHandler = () => {\n    try {\n      /* on modifie l'array des like on prenant l'id du post et celui du user pour les ajouter a la list des like\n      ou le supprimer si il l'avait deja liker et qu'il dislike maintenant */\n      axios.put(\"/posts/\" + post._id + \"/like\", {\n        userId: currentUser._id\n      });\n    } catch (err) {}\n\n    setLike(isLiked ? like - 1 : like + 1);\n    setIsLiked(!isLiked);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"postWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postTop\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"postTopLeft\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `/profile/${user.username}`,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"postProfileImg\",\n              src: user.profilePicture ? PF + user.profilePicture : PF + \"person/noAvatar.png\",\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"postUsername\",\n            children: user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"postDate\",\n            children: format(post.createdAt)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"postTopRight\",\n          children: /*#__PURE__*/_jsxDEV(MoreVert, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postCenter\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"postText\",\n          children: post === null || post === void 0 ? void 0 : post.desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"postImg\",\n          src: PF + post.img,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postBottom\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"postBottomLeft\",\n          children: [/*#__PURE__*/_jsxDEV(ThumbUp, {\n            className: \"likeIcon\",\n            src: `${PF}like.png`,\n            onClick: likeHandler,\n            alt: \"\",\n            htmlColor: \"blue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"postLikeCounter\",\n            children: [like, \" people like it\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"postBottomRight\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"postCommentText\",\n            children: [post.comment, \" comments\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Post, \"CZ+kycxxiKdabMehkYEZ4TEUDC4=\");\n\n_c = Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["C:/Users/Chihez/Desktop/birdy/client/src/components/post/Post.jsx"],"names":["MoreVert","useContext","useEffect","useState","axios","format","Link","AuthContext","ThumbUp","Post","post","like","setLike","likes","length","isLiked","setIsLiked","user","setUser","PF","process","env","REACT_APP_PUBLIC_FOLDER","currentUser","includes","_id","fetchUser","res","get","userId","data","likeHandler","put","err","username","profilePicture","createdAt","desc","img","comment"],"mappings":"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","sourcesContent":["import \"./post.css\";\nimport { MoreVert } from \"@material-ui/icons\";\nimport { useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { format } from \"timeago.js\";\nimport { Link } from \"react-router-dom\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport { ThumbUp } from \"@material-ui/icons\";\n\nexport default function Post({ post }) {\n  const [like, setLike] = useState(post.likes.length);\n  //le nombre de like reprensent la longeur de l'array contenant tout les utilisateur ayant aimer le post\n  const [isLiked, setIsLiked] = useState(false);\n  const [user, setUser] = useState({});\n  //nous utilisant l'element user afin de recuperer les information de l'utilisateur aya publier un post et les afficher dans celui ci\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\n  //permet d'acceder au dossier a partir de n'import quelle position dans le site web\n  //Et cela grace au fichier .env declarant le chemin pour atteindre les photo \n  const { user: currentUser } = useContext(AuthContext);\n\n\n  /* on recupere une array contenant le liste des utilisateurs ayant liker le post */\n  useEffect(() => {\n    /* on verifie si l'user courant a aimer ce post ou pas */\n    setIsLiked(post.likes.includes(currentUser._id));\n  }, [currentUser._id, post.likes]);\n\n  //RECUPERE LES UTILISATEURS\n  useEffect(() => {\n    const fetchUser = async () => {\n      //en utilisant la list de post passe en parametre contenant les userId en recupere les differents nom d'utilisateur ayant publier les post\n      const res = await axios.get(`/users?userId=${post.userId}`);\n      setUser(res.data);\n    };\n    fetchUser();\n  }, [post.userId]);\n\n  const likeHandler = () => {\n    try {\n      /* on modifie l'array des like on prenant l'id du post et celui du user pour les ajouter a la list des like\n      ou le supprimer si il l'avait deja liker et qu'il dislike maintenant */\n      axios.put(\"/posts/\" + post._id + \"/like\", { userId: currentUser._id });\n    } catch (err) {}\n    setLike(isLiked ? like - 1 : like + 1);\n    setIsLiked(!isLiked);\n  };\n  return (\n    <div className=\"post\">\n      <div className=\"postWrapper\">\n        <div className=\"postTop\">\n          <div className=\"postTopLeft\">\n            <Link to={`/profile/${user.username}`}>\n               {/* si l'utilisateur ne possede pas de photos de profile \n              nous afficheront une photo specifique qui lui sevira de photo de profile */}\n              <img\n                className=\"postProfileImg\"\n                src={\n                  user.profilePicture\n                    ? PF + user.profilePicture\n                    : PF + \"person/noAvatar.png\"\n                }\n                alt=\"\"\n              />\n            </Link>\n            <span className=\"postUsername\">{user.username}</span>\n            {/*    //nous avons utiliser la libraire timeago.js qui permet de calculer depuis quand le post a ete poster a partire de la createdAt presente dans la database*/}\n            <span className=\"postDate\">{format(post.createdAt)}</span>\n          </div>\n          <div className=\"postTopRight\">\n            <MoreVert />\n          </div>\n        </div>\n        <div className=\"postCenter\">\n          <span className=\"postText\">{post?.desc}</span>\n          {/*           //recuperation de l'image poste par le user*/}          \n          <img className=\"postImg\" src={PF + post.img} alt=\"\" />\n        </div>\n        <div className=\"postBottom\">\n          <div className=\"postBottomLeft\">\n          <ThumbUp\n              className=\"likeIcon\"\n              src={`${PF}like.png`}\n              onClick={likeHandler}\n              alt=\"\"\n              htmlColor=\"blue\"\n            />\n            <span className=\"postLikeCounter\">{like} people like it</span>\n          </div>\n          <div className=\"postBottomRight\">\n            <span className=\"postCommentText\">{post.comment} comments</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}