{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Chihez\\\\Desktop\\\\birdy\\\\client\\\\src\\\\pages\\\\login\\\\Login.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useContext, useRef, useState } from \"react\";\nimport \"./login.css\";\nimport { loginCall } from \"../../apiCalls\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport { useHistory } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER; //useRef est un hooks que l'on utilise pour recuperer l'email et le mps du formulaire\n\n  const email = useRef();\n  const password = useRef();\n  const history = useHistory();\n  const [text, setText] = useState(\"\");\n  /* on utilise ce hook de useContexte pour utiliser le dispatche de AuthContext dans l'appel de login call */\n\n  const {\n    isFetching,\n    dispatch\n  } = useContext(AuthContext);\n\n  const handleClick = async e => {\n    e.preventDefault();\n    setText(\"\");\n    /* dans le cas ou tout les elements sont bien\n    inserer il faudra cree une variable user qui possedera les attributs cree  */\n\n    const email_val = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/.test(email.current.value) ? email.current.value : \"\";\n    const login_val = !/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/.test(email.current.value) ? email.current.value : \"\";\n    const user = {\n      login: login_val,\n      email: email_val,\n      password: password.current.value\n    };\n    loginCall({\n      email: email.current.value,\n      password: password.current.value\n    }, dispatch);\n\n    try {\n      await axios.post(\"/api/user/login\", user);\n      history.push(\"/\");\n    } catch (err) {\n      console.log(err.json);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-model\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-login100\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wrap-login100\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: PF + \"birdyRBG.png\",\n              alt: \"Birdy\",\n              className: \"logo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleClick,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"login100-form-title\",\n              children: \"Connexion\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"wrap-input100 validate-input\",\n              \"data-validate\": \"Valid email is required: ex@abc.xyz\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"input100\",\n                required: true,\n                type: \"email\",\n                ref: email,\n                name: \"email\",\n                placeholder: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"focus-input100\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"wrap-input100 validate-input\",\n              \"data-validate\": \"Password is required\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"input100\",\n                required: true,\n                ref: password,\n                type: \"password\",\n                name: \"pass\",\n                placeholder: \"Mot de passe\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"focus-input100\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"error-message\",\n                children: text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"container-login100-form-btn\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"login100-form-btn\",\n                type: \"submit\",\n                disabled: isFetching,\n                children: isFetching ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                  color: \"white\",\n                  size: \"20px\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 19\n                }, this) : \"Connexion\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                className: \"txt2\",\n                to: \"./register\",\n                style: {\n                  textDecoration: \"none\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"logRegisterButton\",\n                  children: isFetching ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                    color: \"white\",\n                    size: \"20px\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 23\n                  }, this) : \"Inscription\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                className: \"txt2\",\n                to: \"#\",\n                children: \"Mot de passe oublie?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"OZDURuTCbkqESO/mcw9AP6h2tDc=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Chihez/Desktop/birdy/client/src/pages/login/Login.jsx"],"names":["axios","useContext","useRef","useState","loginCall","AuthContext","CircularProgress","Link","useHistory","Login","PF","process","env","REACT_APP_PUBLIC_FOLDER","email","password","history","text","setText","isFetching","dispatch","handleClick","e","preventDefault","email_val","test","current","value","login_val","user","login","post","push","err","console","log","json","textDecoration"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { useContext, useRef,useState } from \"react\";\nimport \"./login.css\";\nimport { loginCall } from \"../../apiCalls\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport { useHistory } from \"react-router\";\n\nexport default function Login() {\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\n  //useRef est un hooks que l'on utilise pour recuperer l'email et le mps du formulaire\n  const email = useRef();\n  const password = useRef();\n  const history = useHistory();\n  const [text, setText] = useState(\"\");\n\n  /* on utilise ce hook de useContexte pour utiliser le dispatche de AuthContext dans l'appel de login call */\n  const { isFetching, dispatch } = useContext(AuthContext);\n\n  const handleClick = async (e) => {\n    e.preventDefault();\n    setText(\"\");\n    /* dans le cas ou tout les elements sont bien\n    inserer il faudra cree une variable user qui possedera les attributs cree  */\n    const email_val = (/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/.test(email.current.value) ? email.current.value : \"\");\n    const login_val = (!/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/.test(email.current.value) ? email.current.value : \"\");\n    \n    const user = {\n      login: login_val,\n      email: email_val,\n      password: password.current.value,\n    };\n    loginCall(\n      { email: email.current.value, password: password.current.value },\n      dispatch\n    );\n    \n    try {\n      await axios.post(\"/api/user/login\", user);\n      history.push(\"/\");\n    } catch (err) {\n      \n      console.log(err.json);\n    }\n  };\n\n  return (\n    <div className='bg-model'>\n        \n      <div>\n        <div className=\"container-login100\">\n          <div className=\"wrap-login100\">\n            <div>\n              <img src={PF+\"birdyRBG.png\"} alt=\"Birdy\" className=\"logo\"/>\n            </div>\n\n            <form onSubmit={handleClick}>\n              <span className=\"login100-form-title\">\n                Connexion\n              </span>\n\n              <div className=\"wrap-input100 validate-input\" data-validate = \"Valid email is required: ex@abc.xyz\">\n                <input className=\"input100\" required type=\"email\" ref={email} name=\"email\" placeholder=\"Email\"/>\n                <span className=\"focus-input100\"></span>\n               \n              </div>\n\n              <div className=\"wrap-input100 validate-input\" data-validate = \"Password is required\">\n                <input className=\"input100\" required ref={password} type=\"password\" name=\"pass\" placeholder=\"Mot de passe\"/>\n                <span className=\"focus-input100\"></span>\n                \n              </div>\n              {/* ici on effectue une verification si la recherche est en cours si c'est le cas le bouton sera\n            desactiver et l'icone de chargement sera afficher dans le cas contraire on aura\n            notre simple bouton de log in*/}\n              <div>\n                <p className=\"error-message\" >{text}</p>\n              </div>\n              <div className=\"container-login100-form-btn\">\n                <button className=\"login100-form-btn\" type=\"submit\" disabled={isFetching}>\n                  {isFetching ? (\n                  <CircularProgress color=\"white\" size=\"20px\" />\n                    ) : (\n                  \"Connexion\"\n                    )}\n                </button>\n              </div>\n\n              \n\n              <div>\n                <Link className=\"txt2\" to='./register' style={{ textDecoration: \"none\"  }}>\n                  <button className=\"logRegisterButton\">\n                    {isFetching ? (\n                      <CircularProgress color=\"white\" size=\"20px\" />\n                    ) : (\n                      \"Inscription\"\n                    )}\n                  </button>\n                  \n                </Link>\n              </div>\n              \n              <div >\n                \n                <Link className=\"txt2\" to=\"#\">\n                  Mot de passe oublie?\n                </Link>\n              </div>\n\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}